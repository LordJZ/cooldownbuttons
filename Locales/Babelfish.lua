#!/usr/local/bin/lua

-- CONFIG --


--[[
	The name of the AceLocale-3.0 Category, as being used in :NewLocale and :GetLocale
]]
local localeName = "Cooldown Buttons"

--[[
	Prefix to all files if this script is run from a subdir, for example
]]
local filePrefix = "../"

--[[
	List of all files to parse
]]
local files = {
    -- Core Files
	"Core.lua",
    "bars.lua",
    "items.lua",
    "spells.lua",
    "cooldownsets.lua",
    -- Option Files :)
    "Options/Options_Bar.lua",
    "Options/Options_Cooldowns.lua",
    "Options/Options_Announcements.lua",
}

--[[
	The Language your addon was originally written in
]]
local baseLocale = "enUS"


local strings = {}

-- extract data from specified lua files
for idx,filename in pairs(files) do
	local file = io.open(string.format("%s%s", filePrefix or "", filename), "r")
	assert(file, "Could not open " .. filename)
	local text = file:read("*all")

	for match in string.gmatch(text, "L%[\"(.-)\"%]") do
		strings[match] = true
	end
end

local work = {}

for k,v in pairs(strings) do table.insert(work, k) end
table.sort(work)

local AceLocaleHeader = "local L ="
local BabbleFishHeader = "L = {} -- "

local function replaceHeader(content)
	return content:gsub(AceLocaleHeader, BabbleFishHeader):gsub("\\", "\\\\"):gsub("\\\"", "\\\\\"")
end

local localizedStrings = {}

-- load existing data from locale files
do
	local file = io.open("enUS.lua", "r")
	assert(file, "Could not open enUS.lua for reading")
	local content = file:read("*all")
	content = replaceHeader(content)
	assert(loadstring(content))()
	localizedStrings = L
	file:close()
end

-- Write locale files
do
	local file = io.open("enUS.lua", "w")
	assert(file, "Could not open enUS.lua for writing")
	file:write("-- Generated by _a modified_ Babelfish script, do not add strings manually, only translate existing strings.\n")
    file:write("local debug = false\n")
    file:write("--@debug@\n")
    file:write("debug = true\n")
    file:write("--@end-debug@\n")
    file:write("local L = LibStub(\"AceLocale-3.0\"):NewLocale(\"Cooldown Buttons\", \"enUS\", true, debug)\n")
    file:write("\n")
    file:write("--@localization(locale=\"enUS\", format=\"lua_additive_table\", same-key-is-true=true, handle-subnamespaces=\"concat\")@\n")
    file:write("\n")
    file:write("--@do-not-package@\n")
	local L = localizedStrings
	for idx, match in ipairs(work) do
		if type(L[match]) == "string" then
			file:write(string.format("L[\"%s\"] = \"%s\"\n", match, L[match]))
		else
			file:write(string.format("L[\"%s\"] = true\n", match))
        end
	end

    file:write("--@end-do-not-package@\n")
	file:close()
end
